package com.boge.android_0618_notebook;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;

import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.app.Activity;
import android.app.Dialog;
import android.content.ContentValues;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.graphics.Bitmap;
import android.graphics.Bitmap.CompressFormat;
import android.graphics.BitmapFactory;
import android.util.DisplayMetrics;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.view.WindowManager;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;

public class EditActivity extends Activity implements OnClickListener {
	private Button submit_btn;
	private EditText title_edt;
	private EditText content_edt;
	private ImageView img_iv;
	private ImageButton add_imgBtn;
	private Button gallery_btn;// 打开图库按钮
	private Button camera_btn;// 启动相机按钮
	private Button cancel_btn;// 取消按钮
	private MyOpenHelper myHelper;
	private SQLiteDatabase db;
	private int SUBMIT_STATE = 1;
	private int id;
	private View view;
	private Dialog dialog;
	private static final int GET_GALLERY_REQUEST = 1001;
	private static final int GET_RETURN_REQUEST = 1003;
	private static final int GET_CAMERA_REQUEST = 1002;
	private Bitmap bitmap;
	private String IMG_NAME;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_edit);
		initView();
	}

	private void initView() {
		submit_btn = (Button) findViewById(R.id.submit);
		title_edt = (EditText) findViewById(R.id.title);
		content_edt = (EditText) findViewById(R.id.content);
		img_iv = (ImageView) findViewById(R.id.img);
		add_imgBtn = (ImageButton) findViewById(R.id.selectImg);
		submit_btn.setOnClickListener(this);
		add_imgBtn.setOnClickListener(this);
		myHelper = new MyOpenHelper(this, "notedb", null, 1);

		lookOrUpdate();
	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.submit:
			if (SUBMIT_STATE == 1) {
				saveNoteToDB();
			} else {
				updateNoteToDB();
			}
			break;
		case R.id.selectImg:
			selectImgMenu();
			break;
		case R.id.gallery:
			Intent localIntent = new Intent(Intent.ACTION_GET_CONTENT);
			localIntent.setType("image/*");
			startActivityForResult(localIntent, GET_GALLERY_REQUEST);
			dialog.dismiss();
			break;
		case R.id.camera:
			Intent cameraIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
			cameraIntent.putExtra(MediaStore.EXTRA_OUTPUT, Uri
					.fromFile(new File(Environment
							.getExternalStorageDirectory(), IMG_NAME)));
			startActivityForResult(cameraIntent, GET_CAMERA_REQUEST);
			dialog.dismiss();
			break;
		case R.id.cancel:
			dialog.dismiss();
			break;

		default:
			break;
		}

	}

	/**
	 * 创建笔记
	 */
	private void saveNoteToDB() {
		String title = title_edt.getText().toString();
		String content = content_edt.getText().toString();
		ByteArrayOutputStream bos = new ByteArrayOutputStream();
		bitmap.compress(CompressFormat.JPEG, 100, bos);
		Log.i("boge", "title=" + title);
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
		String time = sdf.format(new Date());
		db = myHelper.getWritableDatabase();
		ContentValues values = new ContentValues();
		values.put("title", title);
		values.put("content", content);
		values.put("img", bos.toByteArray());
		Log.i("boge", "bos.toByteArray()=" + bos.toByteArray());
		values.put("time", time);
		db.insert("note", null, values);
		db.close();
		EditActivity.this.finish();

	}

	/**
	 * 更新记录
	 */
	private void updateNoteToDB() {
		db = myHelper.getWritableDatabase();
		String title = title_edt.getText().toString();
		String content = content_edt.getText().toString();
		ByteArrayOutputStream bos = new ByteArrayOutputStream();
		bitmap.compress(CompressFormat.JPEG, 100, bos);
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
		String time = sdf.format(new Date());
		ContentValues values = new ContentValues();
		values.put("title", title);
		values.put("content", content);
		values.put("img", bos.toByteArray());
		values.put("time", time);
		String whereClause = "id=" + id;
		db.update("note", values, whereClause, null);
		db.close();
		EditActivity.this.finish();
	}

	/**
	 * 查看或更新note
	 */
	private void lookOrUpdate() {
		id = getIntent().getIntExtra("id", -1);
		if (id != -1) {
			queryNote(id);
			SUBMIT_STATE = 2;
			submit_btn.setText("更新");
		}

	}

	private void queryNote(int id) {
		db = myHelper.getReadableDatabase();
		String selection = "id=" + id;
		Cursor queryCursor = db.query("note", null, selection, null, null,
				null, null);
		for (queryCursor.moveToFirst(); !queryCursor.isAfterLast(); queryCursor
				.moveToNext()) {
			String title = queryCursor.getString(1);
			String content = queryCursor.getString(2);
			byte[] img_blob = queryCursor.getBlob(3);
			title_edt.setText(title);
			content_edt.setText(content);
			Bitmap bitmap = BitmapFactory.decodeByteArray(img_blob, 0,
					img_blob.length);
			img_iv.setImageBitmap(bitmap);
		}

	}

	/**
	 * 选择图片按钮菜单
	 */
	private void selectImgMenu() {
		view = LayoutInflater.from(this).inflate(
				R.layout.activity_selectimg_dialog, null);
		gallery_btn = (Button) view.findViewById(R.id.gallery);
		camera_btn = (Button) view.findViewById(R.id.camera);
		cancel_btn = (Button) view.findViewById(R.id.cancel);
		dialog = new Dialog(this, R.style.DialogTheme);
		LayoutParams params = new LayoutParams(LayoutParams.MATCH_PARENT,
				LayoutParams.WRAP_CONTENT);
		dialog.setContentView(view, params);
		Window window = dialog.getWindow();
		// 设置动画
		window.setWindowAnimations(R.style.main_menu_anim);
		// 获取屏幕高度
		WindowManager wm = (WindowManager) getApplicationContext()
				.getSystemService(Context.WINDOW_SERVICE);
		DisplayMetrics outMetrics = new DisplayMetrics();
		wm.getDefaultDisplay().getMetrics(outMetrics);
		int screenHeight = outMetrics.heightPixels;
		// 设置对话框位置
		WindowManager.LayoutParams attributes = window.getAttributes();
		attributes.x = 0;
		attributes.y = screenHeight;
		attributes.width = ViewGroup.LayoutParams.MATCH_PARENT;
		attributes.height = ViewGroup.LayoutParams.WRAP_CONTENT;
		dialog.onWindowAttributesChanged(attributes);
		dialog.setCanceledOnTouchOutside(true);
		dialog.show();

		gallery_btn.setOnClickListener(this);
		camera_btn.setOnClickListener(this);
		cancel_btn.setOnClickListener(this);

	}

	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		switch (requestCode) {
		case GET_GALLERY_REQUEST:
			try {
				cropImages(data.getData());
			} catch (Exception e) {
				e.printStackTrace();
			}
			break;
		case GET_RETURN_REQUEST:
			try {
				setHeadImage(data);
			} catch (Exception e1) {
				e1.printStackTrace();
			}
			break;
		case GET_CAMERA_REQUEST:
			if (resultCode == -1) {
				SimpleDateFormat sdf = new SimpleDateFormat(
						"yyyy-MM-dd hh:mm:ss");
				IMG_NAME = sdf.format(new Date());
				File file = new File(Environment.getExternalStorageDirectory(),
						IMG_NAME);
				try {
					cropImages(Uri.fromFile(file));
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
			break;

		default:
			break;
		}
		super.onActivityResult(requestCode, resultCode, data);
	}

	/**
	 * 设置图片
	 * 
	 * @param data
	 */
	private void setHeadImage(Intent data) {
		bitmap = data.getExtras().getParcelable("data");
		if (bitmap != null) {
			img_iv.setImageBitmap(bitmap);
		}

	}

	/**
	 * 裁剪图片
	 */
	private void cropImages(Uri data) {
		Intent intent = new Intent("com.android.camera.action.CROP");
		intent.setDataAndType(data, "image/*");
		intent.putExtra("crop", true);
		intent.putExtra("outputX", 300);
		intent.putExtra("outputY", 300);
		intent.putExtra("return-data", true);
		startActivityForResult(intent, GET_RETURN_REQUEST);

	}
}
